searchState.loadedDescShard("actix_test", 0, "Integration testing tools for Actix Web applications.\nAn asynchronous HTTP and WebSocket client.\nAn HTTP Client request builder\nClient Response\nManages HTTP client network connectivity.\nContent encoding stream corruption.\nHTTP/2 payload error.\nA payload reached EOF, but is not complete.\nGeneric I/O error.\nPayload reached size limit.\nA set of errors that can occur during payload parsing.\nAsync I/O test buffer.\nTest <code>Request</code> builder.\nA basic HTTP server controller that simplifies the process …\nPayload length is unknown.\nConstruct test server url\nSet socket address of the server.\nInserts application data.\nAppend a header, keeping any that were set with an …\nAppends a header, keeping any that were set with an …\nSet HTTP basic authorization header.\nSet HTTP bearer authentication header\nReturns a <code>Future</code> that consumes the body stream and …\nConstructs new <code>Client</code> builder.\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nCalls service and waits for response future completion.\nSend headers in <code>Camel-Case</code> form.\nGet default HeaderMap of Client.\nSets client timeout for first request.\nCreate default test server config.\nSet keep-alive period for opened connection.\nSet max lifetime period for connection.\nSets custom connector.\nSet content length\nSet request’s content type\nSet a cookie\nReturn request cookie.\nSets cookie for this request.\nLoad request cookies.\nCreate <code>DELETE</code> request.\nConstruct HTTP <em>DELETE</em> request.\nConstructs test request with DELETE method.\nSet server connection disconnect timeout in milliseconds.\nCreate new empty <code>TestBuffer</code> instance.\nAdd data to read buffer.\nFinish configuration process and create connector service.\nForce close connection instead of returning it back to …\nFreeze request builder and construct <code>FrozenClientRequest</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>GET</code> request.\nConstruct HTTP <em>GET</em> request.\nConstructs test request with GET method.\nGet HTTP method of this request\nGet peer address of this request.\nGet HTTP URI of request.\nGet HTTP version of this request.\nAccepts HTTP/1.1 only.\nAccepts HTTP/2 only.\nSets TLS handshake timeout.\nCreate <code>HEAD</code> request.\nConstruct HTTP <em>HEAD</em> request.\nReturns request’s headers.\nGet default HeaderMap of Client.\nReturns request’s headers.\nReturns request’s mutable headers.\nInitialize service from application builder instance.\nSets the initial window size (in bytes) for HTTP/2 …\nSets the initial window size (in bytes) for HTTP/2 …\nInsert a header, replacing any that were set with an …\nInserts a header, replacing any that were set with an …\nInsert a header only if it is not yet set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>Future</code> consumes the body stream, parses JSON, …\nSet total number of simultaneous connections per type of …\nSet local IP Address the connector would use for …\nMap the current body type to another using a closure. …\nSets maximum supported HTTP major version.\nSet HTTP method of this request.\nSets method of this request.\nCreate a new connector with default TLS settings\nConstructs new client instance with default settings.\nCreate new <code>TestBuffer</code> instance with initial read buffer.\nDisable automatic decompress of response’s body\nCreates service that always responds with <code>200 OK</code> and no …\nAccepts secure connections via OpenSSL.\nSets custom OpenSSL <code>SslConnector</code> instance.\nCreate <code>OPTIONS</code> request.\nConstruct HTTP <em>OPTIONS</em> request.\nSets request path pattern parameter.\nCreate <code>PATCH</code> request.\nConstruct HTTP <em>PATCH</em> request.\nConstructs test request with PATCH method.\nSets peer address.\nSets test server port.\nCreate <code>POST</code> request.\nConstruct HTTP <em>POST</em> request.\nConstructs test request with POST method.\nCreate <code>PUT</code> request.\nConstruct HTTP <em>PUT</em> request.\nConstructs test request with PUT method.\nSets the query part of the request\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nConnect request with given method and path.\nConstruct HTTP request.\nCreate <code>ClientRequest</code> from <code>RequestHead</code>\nSets custom Rustls v0.20 <code>ClientConfig</code> instance.\nSets custom Rustls v0.21 <code>ClientConfig</code> instance.\nAccepts secure connections via Rustls v0.20.\nAccepts secure connections via Rustls v0.21.\nAccepts secure connections via Rustls v0.22.\nSets custom Rustls v0.22 <code>ClientConfig</code> instance.\nAccepts secure connections via Rustls v0.23.\nSets custom Rustls v0.23 <code>ClientConfig</code> instance.\nSet an empty body and generate <code>ClientRequest</code>.\nComplete request construction and send body.\nSet a urlencoded body and generate <code>ClientRequest</code>\nSet a JSON body and generate <code>ClientRequest</code>\nFinalizes request creation, calls service, and waits for …\nSet an streaming body and generate <code>ClientRequest</code>.\nSerializes <code>data</code> to a URL encoded form and set it as the …\nSerializes <code>data</code> to JSON and set it as the request payload.\nSets request payload.\nStart default <code>TestServer</code>.\nStart test server with custom configuration\nGet the status from the server.\nCreates service that always responds with given status …\nStop HTTP server.\nSets TCP connection timeout.\nSet request timeout. Overrides client wide timeout setting.\nSet a timeout duration for <code>ClientResponse</code>.\nCollects all the bytes produced by <code>body</code>.\nFinalizes request creation and returns <code>HttpRequest</code> and …\nFinalizes request creation and returns <code>HttpRequest</code> …\nFinalizes request creation and returns <code>Request</code> instance.\nFinalizes request creation and returns <code>ServiceRequest</code> …\nFinalizes request creation and returns <code>ServiceResponse</code> …\nGet a localhost socket address with random, unused port.\nSet HTTP URI of request.\nSets URI of this request.\nConstruct test server url\nRead the Request Version.\nSets HTTP version of this request.\nConstructs test request and sets request URI.\nSets number of workers for the test server.\nConnect to a WebSocket server.\nInitialize a WebSocket connection. Returns a WebSocket …\nConnect to WebSocket server at a given path.")